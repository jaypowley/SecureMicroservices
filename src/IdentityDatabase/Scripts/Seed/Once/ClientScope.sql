--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [ClientScope] ON

MERGE INTO [ClientScope] AS [Target]
USING (VALUES
  (1,N'openid',1)
 ,(2,N'profile',1)
 ,(3,N'address',1)
 ,(4,N'email',1)
 ,(5,N'role',1)
 ,(6,N'movieApi',1)
) AS [Source] ([Id],[Scope],[ClientId])
ON ([Target].[Id] = [Source].[Id])
WHEN MATCHED AND (
	NULLIF([Source].[Scope], [Target].[Scope]) IS NOT NULL OR NULLIF([Target].[Scope], [Source].[Scope]) IS NOT NULL OR 
	NULLIF([Source].[ClientId], [Target].[ClientId]) IS NOT NULL OR NULLIF([Target].[ClientId], [Source].[ClientId]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[Scope] = [Source].[Scope], 
  [Target].[ClientId] = [Source].[ClientId]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Id],[Scope],[ClientId])
 VALUES([Source].[Id],[Source].[Scope],[Source].[ClientId])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;


SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [ClientScope]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[ClientScope] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END




SET IDENTITY_INSERT [ClientScope] OFF
SET NOCOUNT OFF
