--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [Client] ON

MERGE INTO [Client] AS [Target]
USING (VALUES
  (1,1,N'movies_mvc_client',N'oidc',1,N'Movies MVC Web App',NULL,NULL,NULL,0,0,0,0,0,0,0,NULL,1,NULL,1,0,300,NULL,3600,300,NULL,2592000,1296000,1,0,1,0,1,1,0,N'client_',NULL,'2021-11-14T19:50:27.7542062',NULL,NULL,NULL,NULL,300,0)
) AS [Source] ([Id],[Enabled],[ClientId],[ProtocolType],[RequireClientSecret],[ClientName],[Description],[ClientUri],[LogoUri],[RequireConsent],[AllowRememberConsent],[AlwaysIncludeUserClaimsInIdToken],[RequirePkce],[AllowPlainTextPkce],[RequireRequestObject],[AllowAccessTokensViaBrowser],[FrontChannelLogoutUri],[FrontChannelLogoutSessionRequired],[BackChannelLogoutUri],[BackChannelLogoutSessionRequired],[AllowOfflineAccess],[IdentityTokenLifetime],[AllowedIdentityTokenSigningAlgorithms],[AccessTokenLifetime],[AuthorizationCodeLifetime],[ConsentLifetime],[AbsoluteRefreshTokenLifetime],[SlidingRefreshTokenLifetime],[RefreshTokenUsage],[UpdateAccessTokenClaimsOnRefresh],[RefreshTokenExpiration],[AccessTokenType],[EnableLocalLogin],[IncludeJwtId],[AlwaysSendClientClaims],[ClientClaimsPrefix],[PairWiseSubjectSalt],[Created],[Updated],[LastAccessed],[UserSsoLifetime],[UserCodeType],[DeviceCodeLifetime],[NonEditable])
ON ([Target].[Id] = [Source].[Id])
WHEN MATCHED AND (
	NULLIF([Source].[Enabled], [Target].[Enabled]) IS NOT NULL OR NULLIF([Target].[Enabled], [Source].[Enabled]) IS NOT NULL OR 
	NULLIF([Source].[ClientId], [Target].[ClientId]) IS NOT NULL OR NULLIF([Target].[ClientId], [Source].[ClientId]) IS NOT NULL OR 
	NULLIF([Source].[ProtocolType], [Target].[ProtocolType]) IS NOT NULL OR NULLIF([Target].[ProtocolType], [Source].[ProtocolType]) IS NOT NULL OR 
	NULLIF([Source].[RequireClientSecret], [Target].[RequireClientSecret]) IS NOT NULL OR NULLIF([Target].[RequireClientSecret], [Source].[RequireClientSecret]) IS NOT NULL OR 
	NULLIF([Source].[ClientName], [Target].[ClientName]) IS NOT NULL OR NULLIF([Target].[ClientName], [Source].[ClientName]) IS NOT NULL OR 
	NULLIF([Source].[Description], [Target].[Description]) IS NOT NULL OR NULLIF([Target].[Description], [Source].[Description]) IS NOT NULL OR 
	NULLIF([Source].[ClientUri], [Target].[ClientUri]) IS NOT NULL OR NULLIF([Target].[ClientUri], [Source].[ClientUri]) IS NOT NULL OR 
	NULLIF([Source].[LogoUri], [Target].[LogoUri]) IS NOT NULL OR NULLIF([Target].[LogoUri], [Source].[LogoUri]) IS NOT NULL OR 
	NULLIF([Source].[RequireConsent], [Target].[RequireConsent]) IS NOT NULL OR NULLIF([Target].[RequireConsent], [Source].[RequireConsent]) IS NOT NULL OR 
	NULLIF([Source].[AllowRememberConsent], [Target].[AllowRememberConsent]) IS NOT NULL OR NULLIF([Target].[AllowRememberConsent], [Source].[AllowRememberConsent]) IS NOT NULL OR 
	NULLIF([Source].[AlwaysIncludeUserClaimsInIdToken], [Target].[AlwaysIncludeUserClaimsInIdToken]) IS NOT NULL OR NULLIF([Target].[AlwaysIncludeUserClaimsInIdToken], [Source].[AlwaysIncludeUserClaimsInIdToken]) IS NOT NULL OR 
	NULLIF([Source].[RequirePkce], [Target].[RequirePkce]) IS NOT NULL OR NULLIF([Target].[RequirePkce], [Source].[RequirePkce]) IS NOT NULL OR 
	NULLIF([Source].[AllowPlainTextPkce], [Target].[AllowPlainTextPkce]) IS NOT NULL OR NULLIF([Target].[AllowPlainTextPkce], [Source].[AllowPlainTextPkce]) IS NOT NULL OR 
	NULLIF([Source].[RequireRequestObject], [Target].[RequireRequestObject]) IS NOT NULL OR NULLIF([Target].[RequireRequestObject], [Source].[RequireRequestObject]) IS NOT NULL OR 
	NULLIF([Source].[AllowAccessTokensViaBrowser], [Target].[AllowAccessTokensViaBrowser]) IS NOT NULL OR NULLIF([Target].[AllowAccessTokensViaBrowser], [Source].[AllowAccessTokensViaBrowser]) IS NOT NULL OR 
	NULLIF([Source].[FrontChannelLogoutUri], [Target].[FrontChannelLogoutUri]) IS NOT NULL OR NULLIF([Target].[FrontChannelLogoutUri], [Source].[FrontChannelLogoutUri]) IS NOT NULL OR 
	NULLIF([Source].[FrontChannelLogoutSessionRequired], [Target].[FrontChannelLogoutSessionRequired]) IS NOT NULL OR NULLIF([Target].[FrontChannelLogoutSessionRequired], [Source].[FrontChannelLogoutSessionRequired]) IS NOT NULL OR 
	NULLIF([Source].[BackChannelLogoutUri], [Target].[BackChannelLogoutUri]) IS NOT NULL OR NULLIF([Target].[BackChannelLogoutUri], [Source].[BackChannelLogoutUri]) IS NOT NULL OR 
	NULLIF([Source].[BackChannelLogoutSessionRequired], [Target].[BackChannelLogoutSessionRequired]) IS NOT NULL OR NULLIF([Target].[BackChannelLogoutSessionRequired], [Source].[BackChannelLogoutSessionRequired]) IS NOT NULL OR 
	NULLIF([Source].[AllowOfflineAccess], [Target].[AllowOfflineAccess]) IS NOT NULL OR NULLIF([Target].[AllowOfflineAccess], [Source].[AllowOfflineAccess]) IS NOT NULL OR 
	NULLIF([Source].[IdentityTokenLifetime], [Target].[IdentityTokenLifetime]) IS NOT NULL OR NULLIF([Target].[IdentityTokenLifetime], [Source].[IdentityTokenLifetime]) IS NOT NULL OR 
	NULLIF([Source].[AllowedIdentityTokenSigningAlgorithms], [Target].[AllowedIdentityTokenSigningAlgorithms]) IS NOT NULL OR NULLIF([Target].[AllowedIdentityTokenSigningAlgorithms], [Source].[AllowedIdentityTokenSigningAlgorithms]) IS NOT NULL OR 
	NULLIF([Source].[AccessTokenLifetime], [Target].[AccessTokenLifetime]) IS NOT NULL OR NULLIF([Target].[AccessTokenLifetime], [Source].[AccessTokenLifetime]) IS NOT NULL OR 
	NULLIF([Source].[AuthorizationCodeLifetime], [Target].[AuthorizationCodeLifetime]) IS NOT NULL OR NULLIF([Target].[AuthorizationCodeLifetime], [Source].[AuthorizationCodeLifetime]) IS NOT NULL OR 
	NULLIF([Source].[ConsentLifetime], [Target].[ConsentLifetime]) IS NOT NULL OR NULLIF([Target].[ConsentLifetime], [Source].[ConsentLifetime]) IS NOT NULL OR 
	NULLIF([Source].[AbsoluteRefreshTokenLifetime], [Target].[AbsoluteRefreshTokenLifetime]) IS NOT NULL OR NULLIF([Target].[AbsoluteRefreshTokenLifetime], [Source].[AbsoluteRefreshTokenLifetime]) IS NOT NULL OR 
	NULLIF([Source].[SlidingRefreshTokenLifetime], [Target].[SlidingRefreshTokenLifetime]) IS NOT NULL OR NULLIF([Target].[SlidingRefreshTokenLifetime], [Source].[SlidingRefreshTokenLifetime]) IS NOT NULL OR 
	NULLIF([Source].[RefreshTokenUsage], [Target].[RefreshTokenUsage]) IS NOT NULL OR NULLIF([Target].[RefreshTokenUsage], [Source].[RefreshTokenUsage]) IS NOT NULL OR 
	NULLIF([Source].[UpdateAccessTokenClaimsOnRefresh], [Target].[UpdateAccessTokenClaimsOnRefresh]) IS NOT NULL OR NULLIF([Target].[UpdateAccessTokenClaimsOnRefresh], [Source].[UpdateAccessTokenClaimsOnRefresh]) IS NOT NULL OR 
	NULLIF([Source].[RefreshTokenExpiration], [Target].[RefreshTokenExpiration]) IS NOT NULL OR NULLIF([Target].[RefreshTokenExpiration], [Source].[RefreshTokenExpiration]) IS NOT NULL OR 
	NULLIF([Source].[AccessTokenType], [Target].[AccessTokenType]) IS NOT NULL OR NULLIF([Target].[AccessTokenType], [Source].[AccessTokenType]) IS NOT NULL OR 
	NULLIF([Source].[EnableLocalLogin], [Target].[EnableLocalLogin]) IS NOT NULL OR NULLIF([Target].[EnableLocalLogin], [Source].[EnableLocalLogin]) IS NOT NULL OR 
	NULLIF([Source].[IncludeJwtId], [Target].[IncludeJwtId]) IS NOT NULL OR NULLIF([Target].[IncludeJwtId], [Source].[IncludeJwtId]) IS NOT NULL OR 
	NULLIF([Source].[AlwaysSendClientClaims], [Target].[AlwaysSendClientClaims]) IS NOT NULL OR NULLIF([Target].[AlwaysSendClientClaims], [Source].[AlwaysSendClientClaims]) IS NOT NULL OR 
	NULLIF([Source].[ClientClaimsPrefix], [Target].[ClientClaimsPrefix]) IS NOT NULL OR NULLIF([Target].[ClientClaimsPrefix], [Source].[ClientClaimsPrefix]) IS NOT NULL OR 
	NULLIF([Source].[PairWiseSubjectSalt], [Target].[PairWiseSubjectSalt]) IS NOT NULL OR NULLIF([Target].[PairWiseSubjectSalt], [Source].[PairWiseSubjectSalt]) IS NOT NULL OR 
	NULLIF([Source].[Created], [Target].[Created]) IS NOT NULL OR NULLIF([Target].[Created], [Source].[Created]) IS NOT NULL OR 
	NULLIF([Source].[Updated], [Target].[Updated]) IS NOT NULL OR NULLIF([Target].[Updated], [Source].[Updated]) IS NOT NULL OR 
	NULLIF([Source].[LastAccessed], [Target].[LastAccessed]) IS NOT NULL OR NULLIF([Target].[LastAccessed], [Source].[LastAccessed]) IS NOT NULL OR 
	NULLIF([Source].[UserSsoLifetime], [Target].[UserSsoLifetime]) IS NOT NULL OR NULLIF([Target].[UserSsoLifetime], [Source].[UserSsoLifetime]) IS NOT NULL OR 
	NULLIF([Source].[UserCodeType], [Target].[UserCodeType]) IS NOT NULL OR NULLIF([Target].[UserCodeType], [Source].[UserCodeType]) IS NOT NULL OR 
	NULLIF([Source].[DeviceCodeLifetime], [Target].[DeviceCodeLifetime]) IS NOT NULL OR NULLIF([Target].[DeviceCodeLifetime], [Source].[DeviceCodeLifetime]) IS NOT NULL OR 
	NULLIF([Source].[NonEditable], [Target].[NonEditable]) IS NOT NULL OR NULLIF([Target].[NonEditable], [Source].[NonEditable]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[Enabled] = [Source].[Enabled], 
  [Target].[ClientId] = [Source].[ClientId], 
  [Target].[ProtocolType] = [Source].[ProtocolType], 
  [Target].[RequireClientSecret] = [Source].[RequireClientSecret], 
  [Target].[ClientName] = [Source].[ClientName], 
  [Target].[Description] = [Source].[Description], 
  [Target].[ClientUri] = [Source].[ClientUri], 
  [Target].[LogoUri] = [Source].[LogoUri], 
  [Target].[RequireConsent] = [Source].[RequireConsent], 
  [Target].[AllowRememberConsent] = [Source].[AllowRememberConsent], 
  [Target].[AlwaysIncludeUserClaimsInIdToken] = [Source].[AlwaysIncludeUserClaimsInIdToken], 
  [Target].[RequirePkce] = [Source].[RequirePkce], 
  [Target].[AllowPlainTextPkce] = [Source].[AllowPlainTextPkce], 
  [Target].[RequireRequestObject] = [Source].[RequireRequestObject], 
  [Target].[AllowAccessTokensViaBrowser] = [Source].[AllowAccessTokensViaBrowser], 
  [Target].[FrontChannelLogoutUri] = [Source].[FrontChannelLogoutUri], 
  [Target].[FrontChannelLogoutSessionRequired] = [Source].[FrontChannelLogoutSessionRequired], 
  [Target].[BackChannelLogoutUri] = [Source].[BackChannelLogoutUri], 
  [Target].[BackChannelLogoutSessionRequired] = [Source].[BackChannelLogoutSessionRequired], 
  [Target].[AllowOfflineAccess] = [Source].[AllowOfflineAccess], 
  [Target].[IdentityTokenLifetime] = [Source].[IdentityTokenLifetime], 
  [Target].[AllowedIdentityTokenSigningAlgorithms] = [Source].[AllowedIdentityTokenSigningAlgorithms], 
  [Target].[AccessTokenLifetime] = [Source].[AccessTokenLifetime], 
  [Target].[AuthorizationCodeLifetime] = [Source].[AuthorizationCodeLifetime], 
  [Target].[ConsentLifetime] = [Source].[ConsentLifetime], 
  [Target].[AbsoluteRefreshTokenLifetime] = [Source].[AbsoluteRefreshTokenLifetime], 
  [Target].[SlidingRefreshTokenLifetime] = [Source].[SlidingRefreshTokenLifetime], 
  [Target].[RefreshTokenUsage] = [Source].[RefreshTokenUsage], 
  [Target].[UpdateAccessTokenClaimsOnRefresh] = [Source].[UpdateAccessTokenClaimsOnRefresh], 
  [Target].[RefreshTokenExpiration] = [Source].[RefreshTokenExpiration], 
  [Target].[AccessTokenType] = [Source].[AccessTokenType], 
  [Target].[EnableLocalLogin] = [Source].[EnableLocalLogin], 
  [Target].[IncludeJwtId] = [Source].[IncludeJwtId], 
  [Target].[AlwaysSendClientClaims] = [Source].[AlwaysSendClientClaims], 
  [Target].[ClientClaimsPrefix] = [Source].[ClientClaimsPrefix], 
  [Target].[PairWiseSubjectSalt] = [Source].[PairWiseSubjectSalt], 
  [Target].[Created] = [Source].[Created], 
  [Target].[Updated] = [Source].[Updated], 
  [Target].[LastAccessed] = [Source].[LastAccessed], 
  [Target].[UserSsoLifetime] = [Source].[UserSsoLifetime], 
  [Target].[UserCodeType] = [Source].[UserCodeType], 
  [Target].[DeviceCodeLifetime] = [Source].[DeviceCodeLifetime], 
  [Target].[NonEditable] = [Source].[NonEditable]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Id],[Enabled],[ClientId],[ProtocolType],[RequireClientSecret],[ClientName],[Description],[ClientUri],[LogoUri],[RequireConsent],[AllowRememberConsent],[AlwaysIncludeUserClaimsInIdToken],[RequirePkce],[AllowPlainTextPkce],[RequireRequestObject],[AllowAccessTokensViaBrowser],[FrontChannelLogoutUri],[FrontChannelLogoutSessionRequired],[BackChannelLogoutUri],[BackChannelLogoutSessionRequired],[AllowOfflineAccess],[IdentityTokenLifetime],[AllowedIdentityTokenSigningAlgorithms],[AccessTokenLifetime],[AuthorizationCodeLifetime],[ConsentLifetime],[AbsoluteRefreshTokenLifetime],[SlidingRefreshTokenLifetime],[RefreshTokenUsage],[UpdateAccessTokenClaimsOnRefresh],[RefreshTokenExpiration],[AccessTokenType],[EnableLocalLogin],[IncludeJwtId],[AlwaysSendClientClaims],[ClientClaimsPrefix],[PairWiseSubjectSalt],[Created],[Updated],[LastAccessed],[UserSsoLifetime],[UserCodeType],[DeviceCodeLifetime],[NonEditable])
 VALUES([Source].[Id],[Source].[Enabled],[Source].[ClientId],[Source].[ProtocolType],[Source].[RequireClientSecret],[Source].[ClientName],[Source].[Description],[Source].[ClientUri],[Source].[LogoUri],[Source].[RequireConsent],[Source].[AllowRememberConsent],[Source].[AlwaysIncludeUserClaimsInIdToken],[Source].[RequirePkce],[Source].[AllowPlainTextPkce],[Source].[RequireRequestObject],[Source].[AllowAccessTokensViaBrowser],[Source].[FrontChannelLogoutUri],[Source].[FrontChannelLogoutSessionRequired],[Source].[BackChannelLogoutUri],[Source].[BackChannelLogoutSessionRequired],[Source].[AllowOfflineAccess],[Source].[IdentityTokenLifetime],[Source].[AllowedIdentityTokenSigningAlgorithms],[Source].[AccessTokenLifetime],[Source].[AuthorizationCodeLifetime],[Source].[ConsentLifetime],[Source].[AbsoluteRefreshTokenLifetime],[Source].[SlidingRefreshTokenLifetime],[Source].[RefreshTokenUsage],[Source].[UpdateAccessTokenClaimsOnRefresh],[Source].[RefreshTokenExpiration],[Source].[AccessTokenType],[Source].[EnableLocalLogin],[Source].[IncludeJwtId],[Source].[AlwaysSendClientClaims],[Source].[ClientClaimsPrefix],[Source].[PairWiseSubjectSalt],[Source].[Created],[Source].[Updated],[Source].[LastAccessed],[Source].[UserSsoLifetime],[Source].[UserCodeType],[Source].[DeviceCodeLifetime],[Source].[NonEditable])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [Client]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[Client] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO



SET IDENTITY_INSERT [Client] OFF
SET NOCOUNT OFF
GO
