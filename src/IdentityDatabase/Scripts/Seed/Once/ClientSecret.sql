--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [ClientSecret] ON

MERGE INTO [ClientSecret] AS [Target]
USING (VALUES
  (1,1,NULL,N'K7gNU3sdo+OL0wNhqoVWhr3g6s1xYv72ol/pe/Unols=',NULL,N'SharedSecret','2021-11-14T19:50:27.7544840')
) AS [Source] ([Id],[ClientId],[Description],[Value],[Expiration],[Type],[Created])
ON ([Target].[Id] = [Source].[Id])
WHEN MATCHED AND (
	NULLIF([Source].[ClientId], [Target].[ClientId]) IS NOT NULL OR NULLIF([Target].[ClientId], [Source].[ClientId]) IS NOT NULL OR 
	NULLIF([Source].[Description], [Target].[Description]) IS NOT NULL OR NULLIF([Target].[Description], [Source].[Description]) IS NOT NULL OR 
	NULLIF([Source].[Value], [Target].[Value]) IS NOT NULL OR NULLIF([Target].[Value], [Source].[Value]) IS NOT NULL OR 
	NULLIF([Source].[Expiration], [Target].[Expiration]) IS NOT NULL OR NULLIF([Target].[Expiration], [Source].[Expiration]) IS NOT NULL OR 
	NULLIF([Source].[Type], [Target].[Type]) IS NOT NULL OR NULLIF([Target].[Type], [Source].[Type]) IS NOT NULL OR 
	NULLIF([Source].[Created], [Target].[Created]) IS NOT NULL OR NULLIF([Target].[Created], [Source].[Created]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[ClientId] = [Source].[ClientId], 
  [Target].[Description] = [Source].[Description], 
  [Target].[Value] = [Source].[Value], 
  [Target].[Expiration] = [Source].[Expiration], 
  [Target].[Type] = [Source].[Type], 
  [Target].[Created] = [Source].[Created]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Id],[ClientId],[Description],[Value],[Expiration],[Type],[Created])
 VALUES([Source].[Id],[Source].[ClientId],[Source].[Description],[Source].[Value],[Source].[Expiration],[Source].[Type],[Source].[Created])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [ClientSecret]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[ClientSecret] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO



SET IDENTITY_INSERT [ClientSecret] OFF
SET NOCOUNT OFF
GO